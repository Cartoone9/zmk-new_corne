#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE	0
#define CODE	1
#define NUM		2
#define FN		3
#define BLT		4

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;     // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};


/ {
    combos {
        compatible = "zmk,combos";
        combo_kj_esc {
            timeout-ms = <50>; // Time window to press both keys (adjust as needed)
            key-positions = <23 24>; // J and K positions
            bindings = <&kp ESC>; // Outputs ESC when pressed together
            layers = <0>; // Only active on the base layer (optional)
        };
        combo_df_numpad {
            timeout-ms = <50>; // Time window to press both keys (adjust as needed)
            key-positions = <16 17>; // D and F positions
            bindings = <&mo NUM>; // Outputs ESC when pressed together
            layers = <0>; // Only active on the base layer (optional)
        };
        combo_cv_fn {
            timeout-ms = <50>; // Time window to press both keys (adjust as needed)
            key-positions = <31 32>; // C and V positions
            bindings = <&mo FN>; // Outputs ESC when pressed together
            layers = <0>; // Only active on the base layer (optional)
        };
        combo_zx_blt {
            timeout-ms = <50>; // Time window to press both keys (adjust as needed)
            key-positions = <40 41>; // C and V positions
            bindings = <&mo BLT>; // Outputs ESC when pressed together
            layers = <0>; // Only active on the base layer (optional)
        };
        combo_yu_egual {
            timeout-ms = <50>; // Time window to press both keys (adjust as needed)
            key-positions = <7 8>; // C and V positions
            bindings = <&kp EQUAL>; // Outputs ESC when pressed together
            layers = <0>; // Only active on the base layer (optional)
        };
        combo_hj_minus {
            timeout-ms = <50>; // Time window to press both keys (adjust as needed)
            key-positions = <22 23>; // C and V positions
            bindings = <&kp MINUS>; // Outputs ESC when pressed together
            layers = <0>; // Only active on the base layer (optional)
        };
        combo_nm_under {
            timeout-ms = <50>; // Time window to press both keys (adjust as needed)
            key-positions = <36 37>; // C and V positions
            bindings = <&kp UNDER>; // Outputs ESC when pressed together
            layers = <0>; // Only active on the base layer (optional)
        };
        combo_hjk_plus {
            timeout-ms = <50>; // Time window to press both keys (adjust as needed)
            key-positions = <22 23 24>; // C and V positions
            bindings = <&kp PLUS>; // Outputs ESC when pressed together
            layers = <0>; // Only active on the base layer (optional)
        };
        combo_rt_tilde {
            timeout-ms = <50>; // Time window to press both keys (adjust as needed)
            key-positions = <4 5>; // C and V positions
            bindings = <&kp TILDE>; // Outputs ESC when pressed together
            layers = <0>; // Only active on the base layer (optional)
        };
        combo_fg_grave {
            timeout-ms = <50>; // Time window to press both keys (adjust as needed)
            key-positions = <17 18>; // C and V positions
            bindings = <&kp GRAVE>; // Outputs ESC when pressed together
            layers = <0>; // Only active on the base layer (optional)
        };
    };

    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "BASE";
            bindings = <
&kp ESC    &kp Q     &kp W      &kp E     &kp R		  &kp T                                  &none                       &kp Y           &kp U			   &kp I      &kp O    &kp P     &kp DEL
&kp TAB    &kp A     &kp S      &kp D     &kp F  	  &kp G                           &none  &none    &none              &kp H           &kp J         	   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z     &kp X      &kp C     &kp V  	  &kp B            &none                 &none                       &kp N           &kp M  		   &kp COMMA  &kp DOT  &kp FSLH  &kp BSLH
                                &kp LGUI  &td0        &kp SPACE													         &lt CODE BSPC	 &mt RSHIFT ENTER  &kp LALT
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        code_layer {
            display-name = "CODE";
            bindings = <
&none     &kp CARET &kp DOLLAR   &kp LBKT   &kp RBKT     &kp PERCENT                              &none					    &kp C_MUTE       &kp C_VOL_DN     &kp UP           &kp C_VOL_UP     &kp PSCRN     &none
&none     &kp STAR  &kp AMPS     &kp LPAR   &kp RPAR	 &kp EXCL                        &none    &none    &none   	        &kp C_PP         &kp LEFT         &kp DOWN         &kp RIGHT        &kp C_NEXT    &none
&none     &none     &kp HASH     &kp LBRC   &kp RBRC     &kp AT		    &none                     &none                     &kp F13          &kp F14          &kp F15          &kp F16          &kp F17       &none
                                 &trans     &trans       &trans																&trans           &trans           &trans
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        numpad_layer {
            display-name = "NUM";
            bindings = <
&none     &none     &none		 &none		 &none       &none                                    &none					    &none       &kp KP_N7     &kp KP_N8     &kp KP_N9     &none    &none
&none     &none     &none   	 &none  	 &none	     &none                           &none    &none    &none   	        &none       &kp KP_N4     &kp KP_N5     &kp KP_N6     &none    &none
&none     &none     &none   	 &none  	 &none       &none		    &none                     &none                     &none       &kp KP_N1     &kp KP_N2     &kp KP_N3     &none    &none
                                 &none       &none       &none                                                              &kp BSPC    &kp KP_N0     &none
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        fn_layer {
            display-name = "FN";
            bindings = <
&none     &none     &none		 &none		 &none       &none                                    &none					    &none       &kp F7     &kp F8     &kp F9     &none    &none
&none     &none     &none   	 &none  	 &none	     &none                           &none    &none    &none   	        &none       &kp F4     &kp F5     &kp F6     &none    &none
&none     &none     &none   	 &none  	 &none       &none		    &none                     &none                     &none       &kp F1     &kp F2     &kp F3     &none    &none
                                 &none       &none       &none                                                              &none       &none      &none
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        blt_layer {
            display-name = "BLT";
            bindings = <
&none  &none        &none           &none         &none         &none                            &none						&none       &none         &none        &none       &none     &none
&none  &bt BT_SEL 0 &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4             &none   &none    &none   	        &none       &none         &none        &none       &none     &none
&none  &bt BT_CLR   &bt BT_CLR_ALL  &none         &none         &none		&none                &none                      &none       &none         &none        &none       &none     &none
                                    &none         &none         &none                                                       &none       &none         &none
            >;
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
