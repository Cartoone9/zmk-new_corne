#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE	0
#define CODE	1
#define EXTRA	2
#define NAV		3
#define NUM		4
#define FN		5
#define BLT		6

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;     // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_kj_esc {
            timeout-ms = <50>; // Time window to press both keys (adjust as needed)
            key-positions = <23 24>; // J and K positions
            bindings = <&kp ESC>; // Outputs ESC when pressed together
            layers = <0>; // Only active on the base layer (optional)
        };
        combo_df_numpad {
            timeout-ms = <50>; // Time window to press both keys (adjust as needed)
            key-positions = <16 17>; // D and F positions
            bindings = <&mo NUM>; // Outputs ESC when pressed together
            layers = <0>; // Only active on the base layer (optional)
        };
        combo_cv_fn {
            timeout-ms = <50>; // Time window to press both keys (adjust as needed)
            key-positions = <31 32>; // C and V positions
            bindings = <&mo FN>; // Outputs ESC when pressed together
            layers = <0>; // Only active on the base layer (optional)
        };
        combo_zx_blt {
            timeout-ms = <50>; // Time window to press both keys (adjust as needed)
            key-positions = <40 41>; // C and V positions
            bindings = <&mo BLT>; // Outputs ESC when pressed together
            layers = <0>; // Only active on the base layer (optional)
        };
//       combo_yu_dquote {
//           timeout-ms = <50>; // Time window to press both keys (adjust as needed)
//           key-positions = <7 8>; // C and V positions
//           bindings = <&kp DQT>; // Outputs ESC when pressed together
//           layers = <0>; // Only active on the base layer (optional)
//       };
//       combo_hj_squote {
//           timeout-ms = <50>; // Time window to press both keys (adjust as needed)
//           key-positions = <22 23>; // C and V positions
//           bindings = <&kp SQT>; // Outputs ESC when pressed together
//           layers = <0>; // Only active on the base layer (optional)
//       };
//        combo_nm_under {
//            timeout-ms = <50>; // Time window to press both keys (adjust as needed)
//            key-positions = <36 37>; // C and V positions
//            bindings = <&kp UNDER>; // Outputs ESC when pressed together
//            layers = <0>; // Only active on the base layer (optional)
//        };
//        combo_hjk_plus {
//            timeout-ms = <50>; // Time window to press both keys (adjust as needed)
//            key-positions = <22 23 24>; // C and V positions
//            bindings = <&kp PLUS>; // Outputs ESC when pressed together
//            layers = <0>; // Only active on the base layer (optional)
//        };
//        combo_rt_tilde {
//            timeout-ms = <50>; // Time window to press both keys (adjust as needed)
//            key-positions = <4 5>; // C and V positions
//            bindings = <&kp TILDE>; // Outputs ESC when pressed together
//            layers = <0>; // Only active on the base layer (optional)
//        };
//        combo_fg_grave {
//            timeout-ms = <50>; // Time window to press both keys (adjust as needed)
//            key-positions = <17 18>; // C and V positions
//            bindings = <&kp GRAVE>; // Outputs ESC when pressed together
//            layers = <0>; // Only active on the base layer (optional)
//        };
    };

	behaviors {
	    td0: td_shift_caps {
	        compatible = "zmk,behavior-tap-dance";
	        label = "TD_SHIFT_CAPS";
	        #binding-cells = <0>;
	        tapping-term-ms = <150>;
	        bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
	    };
		double_colon: double_colon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <30>;
            bindings = <&kp COLON &kp COLON>;
        };

		// big menu :
		big_menu: big_menu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <30>;
            bindings = <&macro_press &kp LALT>,
				<&macro_press &kp SPACE>,
				<&macro_press &kp LALT>;
        };

		// desktop shortcuts :
		desk_1: desk_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <30>;
            bindings = <&macro_press &kp LALT>,
				<&macro_press &kp 1>,
				<&macro_press &kp LALT>;
        };
		desk_2: desk_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <30>;
            bindings = <&macro_press &kp LALT>,
				<&macro_press &kp 2>,
				<&macro_press &kp LALT>;
        };	
		desk_3: desk_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <30>;
            bindings = <&macro_press &kp LALT>,
				<&macro_press &kp 3>,
				<&macro_press &kp LALT>;
        };	
		desk_4: desk_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <30>;
            bindings = <&macro_press &kp LALT>,
				<&macro_press &kp 4>,
				<&macro_press &kp LALT>;
        };	
		desk_5: desk_5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <30>;
            bindings = <&macro_press &kp LALT>,
				<&macro_press &kp 5>,
				<&macro_press &kp LALT>;
        };
		alt_up: alt_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <30>;
            bindings = <&macro_press &kp LALT>,
				<&macro_press &kp UP>,
				<&macro_press &kp LALT>;
        };
		alt_right: alt_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <30>;
            bindings = <&macro_press &kp LALT>,
				<&macro_press &kp RIGHT>,
				<&macro_press &kp LALT>;
        };
		alt_down: alt_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <30>;
            bindings = <&macro_press &kp LALT>,
				<&macro_press &kp DOWN>,
				<&macro_press &kp LALT>;
        };
		alt_left: alt_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <30>;
            bindings = <&macro_press &kp LALT>,
				<&macro_press &kp LEFT>,
				<&macro_press &kp LALT>;
        };
		alt_U: alt_U {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <30>;
            bindings = <&macro_press &kp LALT>,
				<&macro_press &kp U>,
				<&macro_press &kp LALT>;
        };
		alt_I: alt_I {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <30>;
            bindings = <&macro_press &kp LALT>,
				<&macro_press &kp I>,
				<&macro_press &kp LALT>;
        };
		alt_J: alt_J {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <30>;
            bindings = <&macro_press &kp LALT>,
				<&macro_press &kp J>,
				<&macro_press &kp LALT>;
        };
		alt_K: alt_K {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <30>;
            bindings = <&macro_press &kp LALT>,
				<&macro_press &kp K>,
				<&macro_press &kp LALT>;
        };
		alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <30>;
            bindings = <&macro_press &kp LALT>,
				<&macro_press &kp TAB>,
				<&macro_press &kp LALT>;
        };
		acute: dead_key_acute { compatible = "zmk,behavior-dead-key"; #binding-cells = <0>; binding = <&de_acute>; };
		grave: dead_key_grave { compatible = "zmk,behavior-dead-key"; #binding-cells = <0>; binding = <&de_grave>; };

		e_acute: e_acute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <30>;
            bindings = <&acute &kp E>,
        };
		e_grave: e_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <30>;
            bindings = <&grave &kp E>,
        };
		a_grave: a_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <30>;
            bindings = <&grave &kp A>,
        };
	};

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "BASE";
            bindings = <
&big_menu  &kp Q     &kp W      &kp E     &kp R	      &kp T                                  &none                       &kp Y           &kp U			   &kp I      &kp O    &kp P       &kp DEL
&kp TAB    &kp A     &kp S      &kp D     &kp F  	  &kp G                           &none  &none    &none              &kp H           &kp J         	   &kp K      &kp L    &kp COLON   &alt_tab
&kp LCTRL  &kp Z     &kp X      &kp C     &kp V  	  &kp B            &none                 &none                       &kp N           &kp M  		   &kp COMMA  &kp DOT  &kp SEMI    &none
                                &kp LGUI  &td0        &lt CODE SPACE											         &lt EXTRA BSPC	 &mt RSHIFT ENTER  &kp LALT
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        code_layer {
            display-name = "CODE";
            bindings = <
&none     &kp TILDE	 &kp LT		  &kp GT      &kp PERCENT  &kp BSLH                                 &none					    	&kp EQUAL		  &kp STAR		    &kp LBKT   &kp RBKT  &kp PLUS		&none   
&none     &kp HASH	 &kp EXCL	  &kp QMARK	  &kp AMPS     &kp PIPE                        &none    &none    &none   	        	&kp MINUS   	  &kp DQT			&kp LPAR   &kp RPAR  &double_colon	&none   
&none     &kp GRAVE	 &kp CARET	  &kp DOLLAR  &kp AT       &kp FSLH		    &none                   &none                     		&kp UNDER   	  &kp SQT			&kp LBRC   &kp RBRC  &none			&none   
                                  &trans      &trans       &trans																    &lt NAV BSPC      &trans			&trans
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        extra_layer {
            display-name = "EXTRA";
            bindings = <
&none     &none       &none     &e_grave   &e_acute   &none                                   &none					    &kp C_MUTE       &kp C_VOL_DN     &kp UP           &kp C_VOL_UP     &kp PSCRN     &none
&none     &a_grave    &none     &none      &none	  &none                          &none    &none    &none   	        &kp C_PP         &kp LEFT         &kp DOWN         &kp RIGHT        &kp C_NEXT    &none
&none     &none       &none     &none      &none      &none		    &none                     &none                     &kp F13          &kp F14          &kp F15          &kp F16          &kp F17       &none
                                &trans     &trans     &lt NAV SPACE														&trans           &trans           &trans
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        nav_layer {
            display-name = "NAV";
            bindings = <
&none     &none       &none     &none      &none      &none                                   &none					    &none			 &alt_U		      &alt_up		 &alt_I		     &none		 &none
&none     &none       &desk_1   &desk_2    &desk_3	  &desk_4                          &none  &none    &none   	        &none			 &alt_left		  &alt_down		 &alt_right	     &none		 &none
&none     &none       &none     &none      &none      &none		    &none                     &none                     &none			 &alt_J		      &none		     &alt_J		     &none		 &none
                                &none      &none      &none																&none			 &none            &none
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        numpad_layer {
            display-name = "NUM";
            bindings = <
&none     &none     &none		 &none		 &none       &none                                    &none					    &none       &kp N7     &kp N8     &kp N9     &none    &none
&none     &none     &none   	 &none  	 &none	     &none                           &none    &none    &none   	        &none       &kp N4     &kp N5     &kp N6     &none    &none
&none     &none     &none   	 &none  	 &none       &none		    &none                     &none                     &none       &kp N1     &kp N2     &kp N3     &none    &none
                                 &none       &none       &none                                                              &kp BSPC    &kp N0     &none
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        fn_layer {
            display-name = "FN";
            bindings = <
&none     &none     &none		 &none		 &none       &none                                    &none					    &none       &kp F7     &kp F8     &kp F9     &none    &none
&none     &none     &none   	 &none  	 &none	     &none                           &none    &none    &none   	        &none       &kp F4     &kp F5     &kp F6     &none    &none
&none     &none     &none   	 &none  	 &none       &none		    &none                     &none                     &none       &kp F1     &kp F2     &kp F3     &none    &none
                                 &none       &none       &none                                                              &none       &none      &none
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        blt_layer {
            display-name = "BLT";
            bindings = <
&none  &none        &none           &none         &none         &none                            &none						&none       &none         &none        &none       &none     &none
&none  &bt BT_SEL 0 &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4             &none   &none    &none   	        &none       &none         &none        &none       &none     &none
&none  &bt BT_CLR   &bt BT_CLR_ALL  &none         &none         &none		&none                &none                      &none       &none         &none        &none       &none     &none
                                    &none         &none         &none                                                       &none       &none         &none
            >;
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
